Imports System.Collections.Generic
Imports System.Data
Imports System.Data.SqlClient
Imports System.Drawing
Imports System.IO
Imports System.Web.Script.Services

Imports GrapeCity.ActiveReports
Imports GrapeCity.ActiveReports.Export.Pdf

Imports Drg.Util.DataAccess
Imports Drg.Util.DataHelpers

Imports LexxiomLetterTemplates

Partial Class negotiation_clients_Default
    Inherits System.Web.UI.Page

    #Region "Fields"

    Public CreditorInstanceID As String
    Public DataclientID As String
    Public UserID As String
    Public creditorID As String

    Private creds As Dictionary(Of Integer, LetterTemplates.CreditorInfo)

    #End Region 'Fields

#Region "Methods"
    <Services.WebMethod()> _
    Public Shared Sub PM_sendOverwriteNotice(ByVal settID As String, ByVal userID As Integer)

        Dim recips As New List(Of String)
        recips.Add("RFakhoury@lawfirmcsd.com")
        'recips.Add("ugreenridge@lexxiom.com")

        Dim sBody As New StringBuilder
        Dim overwriteUser As String = UserHelper.GetName(userID)
        sBody.AppendLine(String.Format("{0} has overwritten a settlement matter.<br>", overwriteUser))

        Dim ssql As String = "select top 1 [OrigNeg]=u.FirstName + ' ' + u.LastName,[CreditorName]=cr.name + ' #' + right(ci.AccountNumber,4),s.created ,[ClientName]=p.FirstName + ' ' + p.lastname,c.AccountNumber from tblSettlements s WITH(NOLOCK) " & _
                            "inner join tblUser u WITH(NOLOCK) ON s.CreatedBy = u.UserID inner join tblaccount a WITH(NOLOCK) " & _
                            "ON s.CreditorAccountID = a.AccountID inner join tblCreditorInstance ci WITH(NOLOCK) ON " & _
                            "ci.CreditorInstanceID = a.CurrentCreditorInstanceID inner join tblCreditor cr with(nolock) " & _
                            "on ci.creditorid = cr.CreditorID inner join tblClient c WITH(NOLOCK) on c.clientid=s.ClientID inner join tblperson p WITH(NOLOCK) on p.PersonID=c.PrimaryPersonID "
        ssql += String.Format("where status = 'a' AND active = 1 and SettlementID = {0}", settID)

        Using dt As DataTable = SqlHelper.GetDataTable(ssql, CommandType.Text)
            For Each dr As DataRow In dt.Rows
                sBody.AppendLine(String.Format("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Client: {0} - {1}<br>", dr("clientname").ToString, dr("accountnumber").ToString))
                sBody.AppendLine(String.Format("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creditor: {0}<br>", dr("CreditorName").ToString))
                sBody.AppendLine(String.Format("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Created by: {0}<br>", dr("OrigNeg").ToString))
                sBody.AppendLine(String.Format("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Created on: {0}<br>", dr("created").ToString))
                Exit For
            Next
        End Using


        For Each r As String In recips
            EmailHelper.SendMessage("itgroup@lexxiom.com", r, "Settlement Matter Overwritten!".ToUpper, sBody.ToString)
        Next

    End Sub
    Protected Sub AvailableNegotiations_LoadSettlement(ByVal sDataClientID As String, ByVal sAccountID As String) Handles AvailableNegotiations.LoadSettlement
        'load new client and account for settlement process
        'retrieve current selected row from available negotiations
        'load settlement user controls
        Me.AvailableNegotiations.StartSession(sDataClientID, sAccountID, Me.UserID)
        Me.SettlementClientInfoControl1.LoadClientInfo(sDataClientID, sAccountID)
        Me.SettlementCreditorInfoControl1.LoadCreditorInfo(sAccountID, sDataClientID, False)
        Me.SettlementCalculatorControl1.LoadAccountInfo(sDataClientID, sAccountID)
        Me.SessionNotesControl1.BindGrid(sDataClientID, sAccountID)
        Me.SessionNotesControl1.LoadInfoData(sDataClientID, sAccountID, True)
    End Sub

    Protected Sub AvailableNegotiations_MyAssignments(ByVal count As String) Handles AvailableNegotiations.MyAssignments
        hMyAssignments.InnerHtml = "<img src='../images/minimize_off.png' width='20' height='22' border='0' align='right' style='cursor: hand;' onclick='dyntog(div_assign,this)' title='Click to Minimize the table' /> My Assignments (" & count & ")"
    End Sub

    Protected Sub AvailableNegotiations_ResetGuid(ByVal newNoteID As String) Handles AvailableNegotiations.ResetGuid
        'reset the guid for all controls
        Me.SettlementCalculatorControl1.noteID = newNoteID
        Me.SettlementCreditorInfoControl1.noteID = newNoteID
        Me.SessionNotesControl1.noteID = newNoteID
    End Sub

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        'get current userid and store in session
        UserID = DataHelper.Nz_int(Page.User.Identity.Name)
        If Session("UserID") Is Nothing Then
            Session("UserID") = UserID
        End If


        If Request.QueryString("cid") IsNot Nothing Then
            DataclientID = Request.QueryString("cid")
        End If

        If Request.QueryString("crid") IsNot Nothing Then
            creditorID = Request.QueryString("crid")
            CreditorInstanceID = Drg.Util.DataHelpers.AccountHelper.GetCurrentCreditorInstanceID(creditorID)
        End If


        If Not IsPostBack Then

            'retrieve client and creditor accountid from url
            creditorID = Request.QueryString("crid")
            DataclientID = Request.QueryString("cid")

            'not present nothing selected show nothing
            If creditorID Is Nothing And DataclientID Is Nothing Then
                Dim SettID As String = Request.QueryString("sid")
                If SettID IsNot Nothing Then
                    Me.SettlementCalculatorControl1.LoadSettlementInfo(SettID)
                    'load settlement user controls
                    Me.AvailableNegotiations.StartSession(DataclientID, Me.SettlementCalculatorControl1.accountID, UserID)
                    creditorID = Me.SettlementCalculatorControl1.accountID
                    Me.SettlementClientInfoControl1.LoadClientInfo(Me.SettlementCalculatorControl1.DataClientID, Me.SettlementCalculatorControl1.accountID)
                    Me.SettlementCreditorInfoControl1.LoadCreditorInfo(Me.SettlementCalculatorControl1.accountID, Me.SettlementCalculatorControl1.DataClientID, True)
                    Me.SessionNotesControl1.LoadInfoData(Me.SettlementCalculatorControl1.DataClientID, Me.SettlementCalculatorControl1.accountID, True)
                Else
                    creditorID = -1
                    Exit Sub
                End If
                'Else
                'Me.AvailableNegotiations.StartSession(DataclientID, creditorID, UserID)
            End If

            Me.AvailableNegotiations.StartSession(DataclientID, creditorID, UserID)

            NegotiationHelper.RegisterClientVisit(DataclientID, UserID)

            ReportsControl1.UserID = UserID
            ReportsControl1.DataClientID = DataclientID
            ReportsControl1.CreditorAccountID = creditorID

        End If
    End Sub

    Protected Sub SessionNotesControl_NewNote(ByVal noteID As Integer) Handles SessionNotesControl1.NewNote
        Me.SettlementCalculatorControl1.noteID = noteID
        Me.AvailableNegotiations.noteID = noteID
        Me.SettlementCreditorInfoControl1.noteID = noteID
    End Sub

    Protected Sub SettlementCalculatorControl_InsertedOffer(ByVal SettlementID As String, ByVal settlementStatus As String, ByVal dataClientID As String, ByVal accountID As String) Handles SettlementCalculatorControl1.InsertedOffer
        'rebind grid to show new offer
        Me.SessionNotesControl1.BindGrid(SettlementID)

        If settlementStatus = "A" Then
            Dim iClientID As String = Drg.Util.DataAccess.DataHelper.FieldLookup("tblsettlements", "ClientID", "SettlementID = " & SettlementID)
            Dim iAcctID As String = Drg.Util.DataAccess.DataHelper.FieldLookup("tblsettlements", "CreditorAccountID", "SettlementID = " & SettlementID)
            SettlementClientInfoControl1.LoadClientInfo(iClientID, iAcctID)
            Master.UpdateSIFCount()
        End If
    End Sub

    Protected Sub SettlementCreditorInfoControl_EditComplete(ByVal EditClientID As String, ByVal EditCreditorAcctID As String) Handles SettlementCreditorInfoControl1.EditComplete
        Me.SettlementCalculatorControl1.LoadAccountInfo(EditClientID, EditCreditorAcctID)
        Me.SessionNotesControl1.BindGrid(EditClientID, EditCreditorAcctID)
        Me.SessionNotesControl1.LoadInfoData(EditClientID, EditCreditorAcctID, False)
    End Sub

    Protected Sub SettlementCreditorInfoControl_LoadCreditorFilter(ByVal CreditorName As String) Handles SettlementCreditorInfoControl1.LoadCreditorFilter
        Try
            Me.AvailableNegotiations.LoadData("cr.name Like ''%" & CreditorName.Replace("'", "''''") & "%''")
        Catch ex As Exception
            Response.Write("SettlementCreditorInfoControl1_LoadCreditorFilter Error - " & vbCrLf & ex.Message)
        End Try
    End Sub

    Protected Sub SettlementHistoryControl_SelectOffer(ByVal settlementID As String) Handles SessionNotesControl1.SelectOffer
        'load settlement offer
        Me.SettlementCalculatorControl1.LoadSettlementInfo(settlementID)
    End Sub

#End Region 'Methods

End Class